do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v64=0;while true do if (v64==0) then v18=v0(v3(v29,1,1));return "";end end else local v65=v2(v0(v29,16));if v18 then local v75=v5(v65,v18);v18=nil;return v75;else return v65;end end end);local function v19(v30,v31,v32)if v32 then local v66=0 + 0;local v67;while true do if (v66==0) then v67=(v30/((1385 -(1083 + 300))^(v31-(1 -0))))%((6 -4)^(((v32-((1 -0) + 0)) -(v31-1)) + ((1 -0) -0)));return v67-(v67%(3 -(1090 -(593 + 495))));end end else local v68=(2 + (1081 -(175 + 906)))^(v31-1);return (((v30%(v68 + v68))>=v68) and (1 + 0)) or (1496 -(121 + 1375));end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=0;local v39;local v40;while true do if (v38==(0 + 0)) then v39,v40=v1(v15,v17,v17 + 1 + 1 + 0);v17=v17 + (9 -7);v38=1;end if (v38==((415 -(227 + 187)) -0)) then return (v40 * (75 + 181)) + v39;end end end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + 2 + 1);v17=v17 + 4;return (v44 * (7222053 + 9555163)) + (v43 * (889 + 64647)) + (v42 * (742 -486)) + v41;end local function v23()local v45=0;local v46;local v47;while true do if (v45==(1 + 0)) then return (( -(3 -1) * v19(v47,730 -((886 -227) + 39))) + (1 -0)) * ((3 -1)^(v19(v47,78 -(1864 -(1195 + 612)),8 + 23) -(1639 -(574 + 42)))) * ((((v19(v47,1 + 0,53 -(158 -125)) * (2^(9 + (60 -37)))) + v46)/((1 + 1)^(98 -46))) + ((153 + 404) -(422 + 134)));end if ((0 -0)==v45) then v46=v22();v47=v22();v45=965 -(900 + 64);end end end local function v24(v33)local v48;if  not v33 then v33=v22();if (v33==(0 -0)) then return "";end end v48=v3(v15,v17,(v17 + v33) -(273 -(75 + 197)));v17=v17 + v33;local v49={};for v62=1 + 0, #v48 do v49[v62]=v2(v1(v3(v48,v62,v62)));end return v6(v49);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v50=0 -0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50~=3) then else v57=nil;v58=nil;v50=7 -3;end if (v50~=4) then else while true do if (v51==0) then local v76=0;while true do if (v76==0) then v52=0;v53=nil;v76=1;end if (1~=v76) then else v51=1 + 0;break;end end end if (v51~=(2 + 1)) then else v58=nil;while true do local v81=0;local v82;while true do if (v81~=(676 -(315 + 361))) then else v82=0 -0;while true do if (v82~=(0 -0)) then else local v102=0;while true do if ((1813 -(1730 + 82))~=v102) then else v82=1;break;end if (v102==(0 -0)) then if (v52==2) then local v105=1193 -(845 + 348);local v106;while true do if (v105==(0 -0)) then v106=0;while true do local v175=0 -0;local v176;while true do if (v175==0) then v176=0;while true do if (v176==(0 -0)) then if (v106~=(0 + 0)) then else for v253=1 + 0,v22() do local v254=520 -(302 + 218);local v255;local v256;local v257;local v258;while true do if (v254~=2) then else while true do if (v255~=(1551 -(998 + 552))) then else v258=nil;while true do if ((0 -0)~=v256) then else v257=0;v258=nil;v256=1;end if ((1 + 0)~=v256) then else while true do if (v257~=0) then else v258=v20();if (v19(v258,1,1)==0) then local v298=0 -0;local v299;local v300;local v301;local v302;local v303;while true do if ((2 + 0)==v298) then v303=nil;while true do if (v299~=(0 + 0)) then else local v306=0;while true do if (v306==0) then v300=0;v301=nil;v306=1;end if (1~=v306) then else v299=1;break;end end end if (v299==(1 + 1)) then while true do if (v300~=(1339 -(4 + 1333))) then else if (v19(v302,1,1356 -(745 + 610))==(1 + 0)) then v303[2]=v58[v303[2 -0]];end if (v19(v302,2,2)==(1 + 0)) then v303[3]=v58[v303[3]];end v300=617 -(264 + 350);end if (v300==1) then local v308=0;while true do if (v308~=1) then else v300=2 + 0;break;end if (v308==0) then v303={v21(),v21(),nil,nil};if (v301==0) then local v314=0 + 0;local v315;local v316;while true do if (v314==(0 + 0)) then v315=0 + 0;v316=nil;v314=1;end if (v314==(1 + 0)) then while true do if (v315~=(0 -0)) then else v316=0;while true do if (v316==(0 -0)) then v303[3]=v21();v303[5 -1]=v21();break;end end break;end end break;end end elseif (v301==(1918 -(1353 + 564))) then v303[2 + 1]=v22();elseif (v301==(1 + 1)) then v303[3]=v22() -(2^(16 + 0));elseif (v301~=(2 + 1)) then else local v319=1342 -(1238 + 104);local v320;local v321;local v322;while true do if ((0 + 0)==v319) then v320=0 + 0;v321=nil;v319=1 + 0;end if (v319==1) then v322=nil;while true do if (v320~=(1647 -(815 + 832))) then else local v325=0;while true do if (v325==(0 + 0)) then v321=0;v322=nil;v325=1;end if (v325==(1 + 0)) then v320=1;break;end end end if (v320~=(3 -2)) then else while true do if (v321~=(1666 -(1414 + 252))) then else v322=517 -(12 + 505);while true do if (0~=v322) then else v303[1 + 2]=v22() -(2^16);v303[4]=v21();break;end end break;end end break;end end break;end end end v308=1 + 0;end end end if (v300==(551 -(320 + 228))) then if (v19(v302,3 + 0,1018 -(388 + 627))==1) then v303[2 + 2]=v58[v303[4 + 0]];end v53[v253]=v303;break;end if (v300~=(0 -0)) then else local v310=0;while true do if (v310==1) then v300=1;break;end if (v310~=(0 -0)) then else v301=v19(v258,2,7 -4);v302=v19(v258,10 -6,4 + 2);v310=1 + 0;end end end end break;end if (v299~=(1 + 0)) then else local v307=0 -0;while true do if ((0 -0)~=v307) then else v302=nil;v303=nil;v307=1;end if (v307==(221 -(192 + 28))) then v299=5 -3;break;end end end end break;end if (v298==1) then v301=nil;v302=nil;v298=1 + 1;end if (v298==0) then v299=0 -0;v300=nil;v298=1 + 0;end end end break;end end break;end end break;end if (v255~=(769 -(539 + 230))) then else local v285=0;while true do if (v285==1) then v255=2 -1;break;end if (v285~=(0 -0)) then else v256=0;v257=nil;v285=1;end end end end break;end if (v254==1) then v257=nil;v258=nil;v254=2 -0;end if (v254~=0) then else v255=0;v256=nil;v254=1;end end end for v259=1,v22() do v54[v259-(1 + 0)]=v27();end v106=2 -1;end if (v106==1) then for v261=205 -(112 + 92),v22() do v55[v261]=v22();end return v56;end break;end end break;end end end break;end end end if (v52~=1) then else local v107=0;local v108;while true do if ((192 -(101 + 91))~=v107) then else v108=0 -0;while true do if (1~=v108) then else local v190=742 -(382 + 360);while true do if ((0 + 0)==v190) then for v222=1 + 0,v57 do local v223=0;local v224;local v225;while true do if (0==v223) then local v263=0;while true do if (v263==(1306 -(188 + 1118))) then v224=v20();v225=nil;v263=1642 -(296 + 1345);end if (v263==(1 + 0)) then v223=321 -(10 + 310);break;end end end if (v223==(1 + 0)) then if (v224==(1 + 0)) then v225=v20()~=0;elseif (v224==2) then v225=v23();elseif (v224==(1190 -(840 + 347))) then v225=v24();end v58[v222]=v225;break;end end end v56[2 + 1]=v20();v190=987 -(943 + 43);end if (v190~=(1246 -(638 + 607))) then else v108=7 -5;break;end end end if (v108~=0) then else local v191=0;local v192;while true do if ((0 + 0)==v191) then v192=0 -0;while true do if (v192~=(1042 -(128 + 913))) then else v108=1;break;end if (v192==(0 -0)) then v57=v22();v58={};v192=1;end end break;end end end if (v108==(2 + 0)) then v52=37 -(23 + 12);break;end end break;end end end v102=1;end end end if (v82~=(1 + 0)) then else if (v52==(921 -(845 + 76))) then local v103=0;local v104;while true do if (v103~=(1218 -(875 + 343))) then else v104=0;while true do if (v104~=2) then else v52=1 -0;break;end if (v104==(0 -0)) then v53={};v54={};v104=1612 -(1124 + 487);end if (v104==1) then local v109=0;while true do if ((2 -1)~=v109) then else v104=2;break;end if (v109==(271 -(221 + 50))) then v55={};v56={v53,v54,nil,v55};v109=1;end end end end break;end end end break;end end break;end end end break;end if (v51~=2) then else local v77=0 -0;local v78;while true do if (v77~=(1904 -(1324 + 580))) then else v78=0;while true do if (v78==0) then local v100=0;while true do if (v100~=(0 -0)) then else v56=nil;v57=nil;v100=1;end if (v100~=1) then else v78=57 -(49 + 7);break;end end end if (v78~=(1626 -(1560 + 65))) then else v51=871 -(179 + 689);break;end end break;end end end if (1~=v51) then else local v79=0;local v80;while true do if (v79~=(0 + 0)) then else v80=1057 -(233 + 824);while true do if (0==v80) then local v101=0;while true do if (v101~=0) then else v54=nil;v55=nil;v101=1 + 0;end if (v101==(821 -(28 + 792))) then v80=1;break;end end end if (v80~=1) then else v51=1 + 1;break;end end break;end end end end break;end if (v50~=0) then else v51=0;v52=nil;v50=1;end if (2~=v50) then else v55=nil;v56=nil;v50=1009 -(853 + 153);end if (v50~=(4 -3)) then else v53=nil;v54=nil;v50=2;end end end local function v28(v34,v35,v36)local v59=v34[1];local v60=v34[2];local v61=v34[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==0) then v70=1;v71= -1;v69=1;end if (1==v69) then v72={...};v73=v11("#",...) -1;v69=2;end if (v69==3) then A,B=v26(v10(v74));if  not A[1] then local v83=v34[4][v70] or "?";error("Script error at ["   .. v83   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v69==2) then v74=nil;function v74()local v84=v59;local v85=Const;local v86=v60;local v87=v61;local v88=v26;local v89={};local v90={};local v91={};for v95=0 -0,v73 do if ((v95>=v87) or (1566<627)) then v89[v95-v87]=v72[v95 + (1 -0)];else v91[v95]=v72[v95 + 1];end end local v92=(v73-v87) + (2 -1);local v93;local v94;while true do local v96=1002 -(357 + 645);while true do if ((v96==(0 -0)) or (1789>=(10026 -6380))) then local v99=0 -0;while true do if ((v99==(1 + 0)) or ((3652 -(71 + 1745))<=(1576 -932))) then v96=1;break;end if ((v99==((0 -0) -0)) or ((15175 -11139)<=(1845 -(454 + 103)))) then v93=v84[v70];v94=v93[1604 -(735 + 868)];v99=1;end end end if ((v96==(1914 -(1146 + 767))) or ((1767 + 1624)<2180)) then if (((6745 -4796)<(9796 -5032)) and (v94<=17)) then if (((3579 -2069)<2613) and (v94<=(10 -2))) then if (((15074 -(20386 -9793))>=(546 -425)) and (v94<=((102 + 1101) -(820 + 380)))) then if ((v94<=1) or ((12545 -7559)<=(8234 -3782))) then if ((v94==(1068 -(427 + 500 + 141))) or (1000>=(730 + 862))) then local v110=0 + 0;local v111;local v112;local v113;while true do if (((1745 -(88 + 1656))==v110) or (2474>(3437 + 1021))) then v113=nil;while true do if ((v111==(0 -0)) or (1610<(2354 -1500))) then local v205=0 -0;while true do if ((v205==(1 + 0)) or (4023<(2052 -((2340 -(1279 + 78)) + 415)))) then v111=1 + 0;break;end if ((v205==(1026 -(621 + 405))) or ((4540 -(196 + 280))==(4218 -(841 + 1123)))) then local v236=0;while true do if ((v236==(0 -0)) or ((5381 -(718 + 242 + 528))==(3425 -1539))) then v112=v93[7 -5];v113=v91[v93[5 -2]];v236=642 -(330 + 311);end if (((11275 -8412)<=(7399 -4342)) and (v236==(3 -2))) then v205=1;break;end end end end end if ((v111==1) or ((634 + 3299)==(13568 -8756))) then v91[v112 + 1]=v113;v91[v112]=v113[v93[6 -2]];break;end end break;end if (((13654 -9931)>=(1281 -552)) and (v110==0)) then local v193=0 + 0;while true do if ((v193==(1348 -(1247 + 100))) or ((3153 -(1185 + (1150 -710)))<(863 + (1575 -992)))) then v110=587 -(363 + 92 + 131);break;end if ((v193==(144 -(130 + 14))) or ((1056 + 3892)==4632)) then v111=1331 -(1269 + 62);v112=nil;v193=998 -(778 + 219);end end end end else local v114=0 -0;local v115;local v116;local v117;local v118;local v119;while true do if ((v114==(0 -0)) or ((13341 -9831)<=(3102 -(9 + 11)))) then v115=0;v116=nil;v114=1 + 0;end if ((v114==(1 + 1)) or (1554<=(60 + 149))) then v119=nil;while true do if ((((2566 + 3732) -4177)<=4392) and (v115==2)) then while true do if ((0==v116) or ((4110 -(94 + 230))<(545 + 3098))) then local v237=0;local v238;while true do if (((7627 -2880)>(2789 + 1936)) and (v237==(1424 -(778 + 646)))) then v238=386 -(30 + 356);while true do if (((1108 + 2067)<=(702 + 3382)) and (v238==(1 -0))) then v116=(1 + 0) -(1612 -(899 + 713));break;end if (((1772 + 1878)>(6814 -(9036 -3850))) and (v238==(1687 -(920 + 767)))) then v117=v93[2 + (0 -0)];v118={v91[v117](v91[v117 + (2 -1)])};v238=1;end end break;end end end if ((v116==(1 -0)) or ((5433 -(215 + 121 + 154))<(222 + 1914))) then v119=0 + 0;for v265=v117,v93[5 -1] do local v266=1329 -(1050 + 279);while true do if (((6101 -3417)>2542) and (0==v266)) then v119=v119 + 1 + 0;v91[v265]=v118[v119];break;end end end break;end end break;end if (((15233 -11222)<=(8234 -3951)) and (v115==1)) then v118=nil;v119=nil;v115=822 -(618 + 202);end if ((4163==(2984 + 1179)) and (v115==0)) then v116=0 -0;v117=nil;v115=1 + 0 + 0;end end break;end if ((v114==((921 -477) -(60 + 383))) or (75==(3146 -(806 + 475)))) then v117=nil;v118=nil;v114=1 + 1;end end end elseif ((v94==((7 -5) + 0)) or (473>=(6807 -2813))) then local v120=0;local v121;local v122;local v123;local v124;while true do if ((v120==(1328 -(94 + 1233))) or (384>=1817)) then local v194=1486 -(290 + 1196);while true do if ((v194==0) or ((618 + 227)>(9362 -6676))) then v123=nil;v124=nil;v194=1;end if ((v194==(1902 -(321 + 1580))) or ((3623 -(97 + (1249 -(170 + 1067))))>=(9645 -(11223 -5287)))) then v120=4 -2;break;end end end if ((v120==(2 + 0)) or ((2659 -(89 + 320))>4805)) then while true do if ((v121==(0 -0)) or ((1050 + 687)==(7185 -5160))) then local v208=725 -((1357 -800) + 168);local v209;while true do if (((0 + 0)==v208) or ((102 + 1013)<=(310 -172))) then v209=1824 -(656 + (1663 -(237 + 258)));while true do if ((v209==(0 + 0 + 0)) or ((1507 -((432 -(251 + 23)) + 325))<(670 -(363 + 240)))) then v122=v93[2 + 0];v123={v91[v122](v12(v91,v122 + 1 + 0,v71))};v209=1 -0;end if (((3857 -(111 + 1481))==(8606 -6341)) and (v209==((3 -2) -0))) then v121=2 -1;break;end end break;end end end if ((v121==(1292 -(965 + 326))) or ((9453 -5963)>(5181 -(236 + 28)))) then v124=(549 -(11 + 538)) -0;for v226=v122,v93[(2 -1) + 3] do local v227=0;while true do if ((v227==(0 + 0)) or (((4002 + 4013) -(4498 + 1116))<(223 + 957))) then v124=v124 + (3 -2);v91[v226]=v123[v124];break;end end end break;end end break;end if (((0 + 0)==v120) or (((10349 -(47 + 299)) -6583)<(7389 -4840))) then local v195=0 + (1508 -(1066 + 442));while true do if (((5902 -(900 + 900))>186) and (v195==1)) then v120=1 + 0;break;end if ((v195==(0 + (164 -(53 + 111)))) or ((1775 + 3140)<(6365 -2896))) then v121=(1889 -(228 + 729)) -(464 + 468);v122=nil;v195=1 + 0 + 0;end end end end else local v125=0 -0;local v126;local v127;while true do if ((v125==(0 + 0)) or ((3106 -(654 + 423))<(742 + 762))) then local v196=0 -0;while true do if ((v196==(484 -(421 + 62))) or ((1380 -(1 + 163 + 136))>4000)) then v125=1 + 0;break;end if (((531 + 2916)<=(2870 + 1470)) and (0==v196)) then v126=0 -0;v127=nil;v196=2 -(1 + 0);end end end if ((((4111 -(900 + 340)) -1777)>=(2095 -1443)) and (v125==((843 -(681 + 161)) + (0 -0)))) then while true do if (((129 -(24 + (182 -77)))==v126) or ((23 + 632)>=(4183 -((963 -(744 + 161)) + 1894)))) then v127=v93[(3 -1) + 0];v91[v127]=v91[v127](v12(v91,v127 + 1 + 0,v71));break;end end break;end end end elseif ((v94<=(1986 -(1915 + 66))) or ((4118 -(296 + (1710 -1055)))==(295 + 28))) then if ((3066>=(2592 -(838 + 327 + 572))) and (v94==(5 -1))) then v91[v93[6 -4]]();else for v177=v93[1 + 1],v93[7 -4] do v91[v177]=nil;end end elseif ((1637<2928) and (v94<=((614 -(428 + 182)) + 2))) then if ((v91[v93[1 + (469 -(194 + 274))]]~=v93[1950 -(1185 + 761)]) or ((4663 -(613 + (214 -(7 + 54))))<=((3018 -(123 + 518)) -762))) then v70=v70 + (1409 -(1056 + 352));else v70=v93[736 -(24 + 709)];end elseif ((v94==(106 -(4 + 95))) or ((1045 + (1516 -(678 + 497)))>(2112 -(405 + 86)))) then local v179=0 + 0 + (0 -0);local v180;local v181;local v182;while true do if ((v179==((58 -34) -(18 + 6))) or ((1775 -712)==1659)) then v180=0 -0;v181=nil;v179=74 -(49 + 24);end if ((137<1221) and (v179==((985 -(464 + 519)) -1))) then v182=nil;while true do if (((20596 -16452)>(8239 -5168)) and (v180==(0 + 0))) then local v234=0 -(0 + 0);local v235;while true do if ((v234==(1322 -(1119 + 203))) or ((3078 -(2238 -696))>(4379 -1433))) then v235=0 + 0;while true do if (((2461 -1126)==(4710 -3375)) and (v235==(213 -(195 + 17)))) then v180=(2737 -1804) -((2496 -(382 + 1450)) + 268);break;end if ((0==v235) or ((1186 -538)==3603)) then local v281=0 -0;while true do if ((v281==(0 -0)) or ((2902 -(7682 -5547))==(665 + 186))) then v181=v93[1 + 1];v182={};v281=1 -0;end if (((624 -(295 + 215))<(1480 + 2534)) and (v281==(1086 -(638 + 447)))) then v235=1 + (0 -0);break;end end end end break;end end end if ((v180==(1076 -((1320 -(160 + 143)) + 58))) or (3847<(7282 -3972))) then for v239=(141 + 937) -(732 + 345), #v90 do local v240=0 -0;local v241;local v242;while true do if ((v240==1) or ((1944 + 679)==(153 + 286))) then while true do if ((v241==((0 -0) + 0)) or ((1091 -815)>(6250 -1744))) then v242=v90[v239];for v286=1943 -(1209 + 734), #v242 do local v287=0 + 0;local v288;local v289;local v290;while true do if ((v287==(1109 -(38 + 1071))) or (4732<(1284 + 1254))) then local v294=0;while true do if ((v294==0) or ((1589 + 581)==(18236 -(13836 -(186 + 210))))) then v288=v242[v286];v289=v288[607 -((541 -(19 + 79)) + 163)];v294=1;end if (((1527 -(92 + 1434))==v294) or ((5270 -(43 + 1211))<2004)) then v287=2 -1;break;end end end if ((2373>(2300 -(1156 + 187))) and (v287==(1 + 0))) then v290=v288[2 + 0];if (((v289==v91) and (v290>=v181)) or ((2673 + 1510)==(8475 -5900))) then local v296=0 -0;local v297;while true do if ((v296==0) or ((2137 -(656 + 228))<=(1198 -757))) then v297=0 + 0 + 0;while true do if ((v297==(0 + 0)) or (1262<=(1252 -(475 + 344)))) then v182[v290]=v289[v290];v288[31 -(4 + 26)]=v182;break;end end break;end end end break;end end end break;end end break;end if ((v240==(589 -(462 + 127))) or (332>(2221 -(400 + 41)))) then v241=0 -(435 -(154 + 281));v242=nil;v240=1;end end end break;end end break;end end else local v183=0 + 0 + 0;local v184;local v185;local v186;while true do if ((v183==1) or (4531<=(1862 + 1429))) then local v199=0;while true do if ((395<=(2510 + 827)) and (v199==0)) then v186={};v185=v9({},{__index=function(v243,v244)local v268=430 -(147 + 283);local v269;local v270;while true do if ((4944==4944) and (v268==(1583 -(460 + 1123)))) then v269=276 -(256 + 20);v270=nil;v268=3 -2;end if ((1176==((6358 -(968 + 26)) -4188)) and (v268==(1801 -(1291 + 509)))) then while true do if (((3913 -2784)==(3289 -2160)) and (v269==0)) then local v291=(186 + 1129) -(762 + 553);while true do if ((((12485 -(694 + 291)) -8420)==(9679 -6599)) and (v291==(0 + 0))) then v270=v186[v244];return v270[1018 -(235 + 782)][v270[1112 -(453 + (2232 -(868 + 707)))]];end end end end break;end end end,__newindex=function(v245,v246,v247)local v271=0;local v272;while true do if (((3409 -(45 + (1465 -(412 + 1027))))==(8515 -5177)) and (v271==0)) then v272=v186[v246];v272[1 -0][v272[1 + 1]]=v247;break;end end end});v199=1532 -(1239 + 292);end if ((v199==(1 -0)) or ((3045 -(1025 + 222))<=(238 -142))) then v183=1 + 1;break;end end end if (((0 + 0)==v183) or ((2430 -(116 + (5815 -4159)))>=(2804 -(1446 + 502)))) then local v200=1298 -(528 + 770);while true do if ((v200==(487 -(263 + (847 -(351 + 273))))) or (177>=((13530 -7045) -2366))) then v183=3 -2;break;end if ((v200==((465 + 316) -((782 -(290 + 301)) + 590))) or ((340 + 318)>=(2918 -817))) then v184=v86[v93[1162 -(240 + (3418 -2499))]];v185=nil;v200=1 + 0;end end end if ((v183==(4 -2)) or ((12269 -7942)<=(12 + 127))) then for v211=1 + 0,v93[292 -(85 + 203)] do local v212=1401 -(1391 + 10);local v213;local v214;local v215;while true do if ((v212==0) or ((470 + 1319)==(3248 -1660))) then v213=0 + 0;v214=nil;v212=1 -0;end if ((576<=(145 + 711)) and (1==v212)) then v215=nil;while true do if ((4256<(14501 -9867)) and (v213==(0 + 0))) then v214=0 -0;v215=nil;v213=1 + 0;end if (((6549 -4416)<(4741 -(736 + 1103))) and (v213==(1 + 0))) then while true do if ((4664==(3149 + 1515)) and (v214==(1 + 0 + 0))) then if (((1578 -579)<(3285 -(390 + 148))) and (v215[1]==(49 -23))) then v186[v211-(1 + 0)]={v91,v215[1 + 2]};else v186[v211-(2 -1)]={v35,v215[1190 -(692 + 495)]};end v90[ #v90 + (1 -0)]=v186;break;end if ((v214==(0 + 0)) or ((1586 + 3153)<3863)) then local v283=1265 -(1026 + 239);while true do if (((6173 -3272)>(1873 -(317 + 84))) and (v283==0)) then v70=v70 + ((2 -0) -1);v215=v84[v70];v283=1 + 0 + (717 -(425 + 292));end if (((1149 -(935 + 213))==v283) or ((1503 + 124)>(3803 + 859))) then v214=2 -1;break;end end end end break;end end break;end end end v91[v93[2 + 0]]=v28(v184,v185,v36);break;end end end elseif ((v94<=(954 -(362 + 580))) or ((4026 -(514 + 81))<=(3519 -(556 + 174)))) then if ((v94<=(1476 -(1116 + 350))) or (4139>4878)) then if ((3471>=(3986 -(396 + 1030))) and (v94==(1358 -(719 + 630)))) then v91[v93[2 -(0 + 0)]]=v93[3]~=((0 -0) -0);else v70=v93[11 -8];end elseif ((v94>(1318 -(249 + 1058))) or ((6124 -2575)<(2100 -(64 + 121)))) then do return;end else v91[v93[2]]=v35[v93[3]];end elseif (((667 + 1495)==(3458 -(528 + (1702 -(902 + 32))))) and (v94<=(7 + 7))) then if (((487 + 789)<=1603) and (v94>(144 -(66 + 65)))) then v91[v93[1 + 1]]=v28(v86[v93[2 + 1]],nil,v36);else local v131=0 -0;local v132;local v133;local v134;while true do if ((v131==(0 + 0)) or ((6051 -(89 + 1901))<(759 + 2346))) then v132=291 -(101 + (493 -303));v133=nil;v131=(1767 -(881 + 193)) -(292 + 400);end if ((v131==(3 -2)) or (((6430 -3018) + 544)<(2668 + 1031))) then v134=nil;while true do if (((247 -134)<(2035 -1203)) and (v132==(1 + 0))) then while true do if ((v133==0) or ((1838 -(330 + 115))==(4601 -2902))) then v134=v93[1384 -(556 + 826)];v91[v134]=v91[v134](v12(v91,v134 + (789 -(601 + (554 -(203 + 164)))),v93[1947 -(589 + 1355)]));break;end end break;end if (((0 + 0)==v132) or ((5123 -((2052 -1256) + 638))<(6299 -3069))) then local v216=389 -(232 + 157);while true do if ((v216==0) or ((256 + 106)>422)) then v133=1051 -(441 + 610);v134=nil;v216=1 + (0 -0);end if (((3339 -(636 + 219))<(4341 -1795)) and (v216==((543 -361) -(26 + 155)))) then v132=1 + 0;break;end end end end break;end end end elseif ((v94<=(1 + 14)) or ((5085 -2911)>=(13848 -9174))) then v91[v93[2]]={};elseif (((369 + 43)<2472) and (v94>(39 -23))) then v91[v93[227 -(60 + 165)]]=v91[v93[3]][v93[1977 -(342 + 79 + 1552)]];elseif ((v91[v93[1 + 1]]~=v91[v93[659 -(63 + 592)]]) or ((6387 -4068)<(3658 -(403 + 685 + 500)))) then v70=v70 + 1 + (1027 -(831 + 196));else v70=v93[3 + 0];end elseif (((846 + 64)==(2707 -(1153 + 644))) and (v94<=((3450 -(1226 + 254)) -(186 + 1758)))) then if (((3085 -(388 + 425))>=(2454 -1415)) and (v94<=(1152 -(904 + (914 -687))))) then if ((((9566 -(1220 + 717)) -4697)<=((3437 + 2931) -3244)) and (v94<=(1339 -(1156 + 164)))) then if ((4773>(1970 -(94 + 5))) and (v94>18)) then if ((v91[v93[1 + 1]]==v93[4 + 0]) or ((2639 + 2173)<((711 + 4303) -(3031 -(1691 + 201))))) then v70=v70 + 1 + 0;else v70=v93[3];end else local v136=0 + 0;local v137;while true do if (((221 -((266 -113) + 19))<(1911 -(694 + 211))) and (v136==(0 -0))) then v137=v93[(7 + 0) -5];v91[v137](v91[v137 + 1 + (0 -0)]);break;end end end elseif ((v94==(7 + 13)) or ((3088 + 57)<(362 + 1194))) then local v138=(1131 -(1099 + 32)) + 0;local v139;local v140;local v141;local v142;local v143;while true do if ((v138==(0 + 0 + 0)) or ((17333 -12480)<=216)) then v139=v93[2];v140=v93[4];v138=(2 -1) + 0;end if (((3924 + 878)>=((2311 + 566) -(6 + 52))) and (v138==(1 + 0))) then v141=v139 + 2 + 0;v142={v91[v139](v91[v139 + (4 -3)],v91[v141])};v138=5 -3;end if ((3712>(3517 -(15 + 273))) and (2==v138)) then local v197=0 -0;while true do if (((11421 -7428)==(14448 -10455)) and (v197==(0 -0))) then for v228=1 + 0 + 0,v140 do v91[v141 + v228]=v142[v228];end v143=v142[1];v197=1;end if ((v197==(1421 -(348 + 1072))) or (1833>(5936 -3450))) then v138=5 -2;break;end end end if ((864<4067) and ((2 + 1)==v138)) then if (v143 or ((6545 -(1280 + 341))<=(777 + 106))) then local v202=0 -0;local v203;while true do if (((1107 -(268 + 273 + 566))==v202) or (3473==(5577 -(69 + 600 + 132)))) then v203=0 + 0 + 0;while true do if (((2906 -1088)<=(5596 -(259 + 1138))) and (v203==(0 + 0))) then v91[v141]=v143;v70=v93[499 -(371 + 125)];break;end end break;end end else v70=v70 + (1 -0);end break;end end else local v144=0 + (0 -0);local v145;local v146;local v147;local v148;local v149;while true do if (((13686 -9287)==(3112 + 1141 + 146)) and (v144==(4 -3))) then v147=nil;v148=nil;v144=5 -3;end if ((2==v144) or (3910==(9096 -4422))) then v149=nil;while true do if (((778 + 499)<=(5540 -(2393 + 315))) and ((2 -1)==v145)) then local v217=0;while true do if (((2034 + 1453)>(6159 -4307)) and (v217==(0 + 0 + 0))) then v71=(v148 + v146) -((974 -(248 + 724)) -1);v149=0;v217=263 -(197 + 65);end if ((v217==(698 -(144 + 553))) or ((1217 + 351)>(9109 -4807))) then v145=2;break;end end end if ((215<=(8277 -4768)) and (v145==((1707 -930) -(441 + 334)))) then for v230=v146,v71 do local v231=0 + 0;local v232;while true do if ((v231==(0 + 0)) or ((3579 -(62 + 775))==4287)) then v232=(0 + 0) -0;while true do if ((v232==(0 -0)) or ((1046 + 311)<=646)) then v149=v149 + 1 + 0;v91[v230]=v147[v149];break;end end break;end end end break;end if (((814 + 845)>=(774 + 488)) and ((211 -(51 + 160))==v145)) then local v218=0 + 0;while true do if ((v218==(1 + 0)) or ((170 -59)>=(2161 -(468 + 912)))) then v145=2 -1;break;end if (((0 -0)==v218) or ((120 + 87)==686)) then v146=v93[1 + 1];v147,v148=v88(v91[v146](v91[v146 + (2 -(342 -(77 + 264)))]));v218=1 + 0;end end end end break;end if (((17882 -13842)==4040) and ((0 + 0)==v144)) then v145=0 + 0;v146=nil;v144=1;end end end elseif ((v94<=(668 -(43 + 602))) or ((21471 -(73072 -56085))<=(5765 -2334))) then if ((v94==((31 + 8) -17)) or (((872 -(34 + 32)) + 4143)<(4974 -3417))) then local v150=0 + (827 -(31 + 796));local v151;local v152;while true do if (((4448 -(1162 + 226))<=(5968 -(5985 -3538))) and (v150==(0 -0))) then v151=0 + 0;v152=nil;v150=1693 -((2881 -1919) + 730);end if (((5454 -(13 + 581))>=(317 -245)) and (v150==(1392 -((1311 -(445 + 649)) + 1174)))) then while true do if (((2364 -(1223 + 292))<(4929 -(129 + 145))) and (v151==((0 + 0) -0))) then v152=v93[6 -4];v91[v152](v12(v91,v152 + 1 + 0,v93[3 + 0]));break;end end break;end end else v36[v93[1671 -(1070 + 598)]]=v91[v93[1 + 1]];end elseif (((1334 -(55 + 221))<(2746 -(464 + 46))) and (v94<=(93 -69))) then v91[v93[2 -0]][v93[1689 -(1451 + 235)]]=v93[9 -5];elseif ((v94>(67 -42)) or ((679 -422)>(259 + 198))) then v91[v93[2]]=v91[v93[645 -((659 -(18 + 11)) + 12)]];elseif ((v93[3 -1]==v91[v93[12 -8]]) or ((5074 -(1150 + 171))<(1615 + 563))) then v70=v70 + 1;else v70=v93[5 -2];end elseif ((762<=(2465 + 647)) and (v94<=(6 + 24))) then if ((v94<=(22 + 6)) or ((5886 -2835)>4483)) then if (((1096 -643)<(5242 -(286 + 4))) and (v94==(71 -(6 + 38)))) then local v155=0;local v156;local v157;local v158;local v159;local v160;local v161;while true do if (((2247 -1027)<1701) and (v155==(2 -0))) then v160=nil;v161=nil;v155=934 -(530 + 401);end if ((1779==(821 + 602 + 217 + 139)) and (v155==1)) then v158=nil;v159=nil;v155=1419 -(984 + 433);end if ((v155==(489 -(270 + 216))) or ((4911 -(560 + 104))<(5601 -(1498 + 401)))) then while true do if ((v156==(4 -2)) or ((5326 -(1315 + 47))==(5794 -1454))) then v161=nil;while true do if ((v157==0) or ((1883 -(66 + 402))==(1412 -(110 + 187)))) then local v249=0 -0;while true do if ((v249==((2631 -(122 + 549)) -((1473 -(329 + 1003)) + 1819))) or ((898 -(12 + 264))>2641)) then v158=v93[(1888 -(649 + 104)) -(750 + 383)];v159,v160=v88(v91[v158](v12(v91,v158 + 1 + 0,v93[515 -(491 + 21)])));v249=1;end if ((v249==(1198 -(169 + 1028))) or ((5130 -(1064 + 572))<=(1868 + 254))) then v157=1 -0;break;end end end if ((v157==(511 -(141 + 368))) or ((2162 + 148)<(1477 -(627 + 748)))) then for v273=v158,v71 do local v274=0;local v275;local v276;while true do if ((190<(4801 -3190)) and ((1063 -(763 + 300))==v274)) then v275=1115 -(22 + 1093);v276=nil;v274=1 -0;end if (((1229 -(116 + 1112))==v274) or ((4440 -1062)<(470 -(239 + 36)))) then while true do if (((2671 -(709 + 832))<=(1493 + (2935 -(74 + 1090)))) and (v275==(0 + 0))) then v276=0 + 0;while true do if ((v276==(0 -0)) or ((541 + 133)>=(7100 -3425))) then v161=v161 + (1987 -(930 + (1554 -(409 + 89))));v91[v273]=v159[v161];break;end end break;end end break;end end end break;end if ((3515<4084) and (v157==(2 -1))) then local v250=0;local v251;while true do if (((183 + 607)<=(4426 -(178 + 11))) and (v250==0)) then v251=592 -(131 + 461);while true do if ((163<=((2220 -787) + 2910)) and (v251==(0 + 0))) then local v284=0;while true do if ((v284==0) or (((2540 -1971) + 380)>((1449 + 1134) -(74 + 67)))) then v71=(v160 + v158) -(1 + 0);v161=0 + 0 + 0;v284=(1108 -(725 + 382)) -0;end if ((v284==(1 -0)) or ((4943 -(327 + 1415))==(387 + 330))) then v251=1 + 0;break;end end end if (((1090 + 855)<=4402) and (v251==1)) then v157=2;break;end end break;end end end end break;end if ((3986>(13202 -10320)) and (v156==(0 + 0))) then local v219=0 + 0;while true do if ((v219==(1011 -(338 + 672))) or ((8492 -(4303 + 1865))>(1438 + 1761))) then v156=221 -(6 + 214);break;end if ((v219==(0 -0)) or ((537 + 1750)>=(5231 -(312 + 393)))) then v157=(89 + 1034) -(226 + 897);v158=nil;v219=1 + 0 + 0;end end end if (((2591 + 1379)>(1124 + 835)) and (v156==(949 -(205 + 743)))) then v159=nil;v160=nil;v156=1890 -(488 + 1400);end end break;end if ((2876<(7870 -4957)) and (v155==(0 -0))) then v156=0 -0;v157=nil;v155=1 + (1023 -(560 + 463));end end else local v162=0;local v163;local v164;local v165;while true do if (((877 + (2009 -(145 + 32)))>(2020 -(66 + 528))) and (v162==((2103 -(795 + 627)) -(361 + 320)))) then v163=0 + 0;v164=nil;v162=1 + 0;end if (((8008 -3719)==(8376 -4087)) and ((820 -(158 + (1792 -1131)))==v162)) then v165=nil;while true do if (((4 + 776)<=(666 + 430)) and (v163==(0 + 0))) then v164=1510 -(977 + 141 + 392);v165=nil;v163=1 + 0;end if (((528 -(88 + 439))==v163) or (1016>(1698 + 1056))) then while true do if ((v164==(0 + (710 -(461 + 249)))) or ((13098 -8404)<=(1085 + 1946 + 1497))) then v165=v93[2];v91[v165]=v91[v165]();break;end end break;end end break;end end end elseif (((7258 -3661)>=(1854 + 562)) and (v94>(68 -39))) then local v166=0;local v167;while true do if ((v166==(0 + 0)) or ((1247 -(407 + 389))==(4252 -(104 + 18 + 454)))) then v167=v93[2];v91[v167]=v91[v167](v91[v167 + (1 -0)]);break;end end else v91[v93[2 + 0]]=v93[19 -(15 + 1)];end elseif ((v94<=(27 + 5)) or ((87 + 548)>(3509 -(339 + 59)))) then if ((v94==(55 -24)) or (((11874 -8195) -1630)>4731)) then local v169=0;local v170;local v171;local v172;while true do if ((v169==(71 -(24 + 46))) or ((349 + 1374 + 159)>(6303 -(1179 + 567)))) then v172=nil;while true do if ((v170==(838 -(784 + 54))) or ((4496 -2502)>(1971 + 2747))) then local v220=0 + 0;while true do if (((2908 -2020)<=3056) and (v220==0)) then v171=v93[3];v172=v91[v171];v220=2 -1;end if (((3017 -(749 + 88))<=3812) and (v220==(1772 -(1339 + 432)))) then v170=1 + 0 + 0;break;end end end if ((((25522 -16733) -5703)>=((2132 -(349 + 1572)) -157)) and (v170==1)) then for v233=v171 + ((2 -0) -(1 + 0)),v93[2 + 2] do v172=v172   .. v91[v233];end v91[v93[735 -(323 + 410)]]=v172;break;end end break;end if ((((5244 -3584) + 586)<=3680) and (v169==(0 -0))) then v170=0;v171=nil;v169=1 + 0;end end else v91[v93[(1 + 2) -1]]=v91[v93[9 -6]][v91[v93[1 + 3]]];end elseif ((v94<=(129 -96)) or ((4708 -(145 + 204))<(2980 + 1300))) then v91[v93[1 + 1]]=v36[v93[2 + 1]];elseif ((v94==((206 -106) -66)) or ((4071 -((205 -119) + 360))<(875 + 293))) then if (((6501 -3566)<=(9243 -4616)) and v91[v93[5 -3]]) then v70=v70 + (1 -0);else v70=v93[3];end else v91[v93[1 + 1]][v93[203 -(114 + 86)]]=v91[v93[4]];end v70=v70 + (1417 -((554 -(158 + 106)) + 1126));break;end end end end v69=3;end end end;end return v28(v27(),{},v16)();end vv8());end